[{"filePath":"/Users/ganabhat/Desktop/mystack/ESlint_Custom_Rules/ES/ESlint_Custom_Rules/server/app.js","messages":[{"ruleId":"depricatedMethod","severity":2,"message":"Definition for rule 'depricatedMethod' was not found","line":1,"column":1,"nodeType":"Program","source":"let express = require('express');"},{"ruleId":"route.validator","severity":2,"message":"Definition for rule 'route.validator' was not found","line":1,"column":1,"nodeType":"Program","source":"let express = require('express');"},{"ruleId":"no_Double_module.export","severity":2,"message":"Definition for rule 'no_Double_module.export' was not found","line":1,"column":1,"nodeType":"Program","source":"let express = require('express');"},{"ruleId":"no_multiple_module.exports","severity":2,"message":"Definition for rule 'no_multiple_module.exports' was not found","line":1,"column":1,"nodeType":"Program","source":"let express = require('express');"},{"ruleId":"no-undefined","severity":2,"message":"Unexpected use of undefined.","line":12,"column":5,"nodeType":"Identifier","source":"let undefined = \"\";"},{"ruleId":"no-unused-vars","severity":2,"message":"'undefined' is assigned a value but never used.","line":12,"column":5,"nodeType":"Identifier","source":"let undefined = \"\";"},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":12,"column":17,"nodeType":"Literal","source":"let undefined = \"\";","fix":{"range":[275,277],"text":"''"}},{"ruleId":"no-unused-vars","severity":2,"message":"'next' is defined but never used.","line":30,"column":33,"nodeType":"Identifier","source":"app.use(function(err, req, res, next) {"},{"ruleId":"promise/always-return","severity":2,"message":"Each then() should return a value or throw","line":73,"column":16,"nodeType":"FunctionExpression","source":"myPromise.then(function(val) {});"},{"ruleId":"no-unused-vars","severity":2,"message":"'val' is defined but never used.","line":73,"column":25,"nodeType":"Identifier","source":"myPromise.then(function(val) {});"},{"ruleId":"promise/no-return-in-finally","severity":2,"message":"No return in finally","line":83,"column":4,"nodeType":"Identifier","source":"}).finally(() =>{"}],"errorCount":11,"warningCount":0,"source":"let express = require('express');\nlet path = require('path');\nlet logger = require('morgan');\nlet http = require('http');\nlet routes = require('./routes/index');\n\n// change this to something else if port 3000 is in use\nlet port = 3000;\n\nlet app = express();\n\nlet undefined = \"\";\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\napp.use(logger('dev'));\napp.use(express.static(path.join(__dirname, '../public')));\napp.use(express.static(path.join(__dirname, '../build')));\n\napp.use('/', routes);\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n let err = new Error('Not Found');\n err.status = 404;\n next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n res.status(err.status || 500);\n res.render('error', {\n  message: err.message,\n  error: err\n });\n});\n\n\nlet server = http.createServer(app);\nserver.listen(3000);\nserver.on('listening', function() {\n console.log('listening on port ' + port);\n});\nserver.on('error', function(error) {\n depricatedMethod();\n switch (error.code) {\n case 'EACCES':\n  console.error('Port ' + port + ' requires elevated privileges');\n  process.exit(1);\n  break;\n case 'EADDRINUSE':\n  console.error('Port ' + port + ' is already in use');\n  process.exit(1);\n  break;\n default:\n  throw error;\n }\n});\nfunction depricatedMethod(){\n}\n\nlet myPromise = new Promise(function(myResolve, myReject) {\n  // \"Producing Code\" (May take some time)\n  \n myResolve(); // when successful\n myReject();  // when error\n});\nfunction forgotToReturn(){\n\n}\nfunction doSomething(){\n}\nmyPromise.then(function(val) {});\nmyPromise.then(() => {\n return doSomething();\n});\nmyPromise.then(b => {\n if (b) {\n  return 'yes';\n } else {\n  return forgotToReturn();\n }\n}).finally(() =>{\n return true;\n});\nmodule.exports = app;\nmodule.exports = app;\n"},{"filePath":"/Users/ganabhat/Desktop/mystack/ESlint_Custom_Rules/ES/ESlint_Custom_Rules/server/routes/index.js","messages":[{"ruleId":"depricatedMethod","severity":2,"message":"Definition for rule 'depricatedMethod' was not found","line":1,"column":1,"nodeType":"Program","source":"var express = require('express');"},{"ruleId":"route.validator","severity":2,"message":"Definition for rule 'route.validator' was not found","line":1,"column":1,"nodeType":"Program","source":"var express = require('express');"},{"ruleId":"no_Double_module.export","severity":2,"message":"Definition for rule 'no_Double_module.export' was not found","line":1,"column":1,"nodeType":"Program","source":"var express = require('express');"},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":1,"column":1,"nodeType":"VariableDeclaration","source":"var express = require('express');","fix":{"range":[0,3],"text":"let"}},{"ruleId":"no_multiple_module.exports","severity":2,"message":"Definition for rule 'no_multiple_module.exports' was not found","line":1,"column":1,"nodeType":"Program","source":"var express = require('express');"},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":2,"column":1,"nodeType":"VariableDeclaration","source":"var router = express.Router();","fix":{"range":[34,37],"text":"let"}},{"ruleId":"no-unused-vars","severity":2,"message":"'next' is defined but never used.","line":5,"column":36,"nodeType":"Identifier","source":"router.get('/', function(req, res, next) {"},{"ruleId":"indent","severity":2,"message":"Expected indentation of 1 space but found 2.","line":6,"column":3,"nodeType":"ExpressionStatement","source":"  res.render('index', {});","fix":{"range":[130,132],"text":" "}},{"ruleId":"no-unused-vars","severity":2,"message":"'next' is defined but never used.","line":9,"column":43,"nodeType":"Identifier","source":"router.get('/Vanilla', function(req, res, next) {"},{"ruleId":"indent","severity":2,"message":"Expected indentation of 1 space but found 2.","line":10,"column":3,"nodeType":"ExpressionStatement","source":"  res.render('index', {fileName: 'vanilla'});","fix":{"range":[212,214],"text":" "}},{"ruleId":"no-unused-vars","severity":2,"message":"'next' is defined but never used.","line":13,"column":41,"nodeType":"Identifier","source":"router.get('/react', function(req, res, next) {"},{"ruleId":"indent","severity":2,"message":"Expected indentation of 1 space but found 2.","line":14,"column":3,"nodeType":"ExpressionStatement","source":"  res.render('index', {fileName: 'react'});","fix":{"range":[311,313],"text":" "}},{"ruleId":"no-unused-vars","severity":2,"message":"'next' is defined but never used.","line":17,"column":43,"nodeType":"Identifier","source":"router.get('/angular', function(req, res, next) {"},{"ruleId":"indent","severity":2,"message":"Expected indentation of 1 space but found 2.","line":18,"column":3,"nodeType":"ExpressionStatement","source":"  res.render('index', {fileName: 'angular'});","fix":{"range":[410,412],"text":" "}}],"errorCount":14,"warningCount":0,"source":"var express = require('express');\nvar router = express.Router();\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', {});\n});\n\nrouter.get('/Vanilla', function(req, res, next) {\n  res.render('index', {fileName: 'vanilla'});\n});\n\nrouter.get('/react', function(req, res, next) {\n  res.render('index', {fileName: 'react'});\n});\n\nrouter.get('/angular', function(req, res, next) {\n  res.render('index', {fileName: 'angular'});\n});\n\nmodule.exports = router;\n"}]